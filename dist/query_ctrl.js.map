{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","GenericDatasourceQueryCtrl","$scope","$injector","scope","target","device","plugin","sensor","type","query","datasource","metricFindQuery_device","metricFindQuery_plugin","metricFindQuery_sensor","rawQuery","panelCtrl","refresh","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,e,kBAAAA,S;;;;;;;;;;;;;;;;;;;;;4CAGKC,0B;;;AAEX,4CAAYC,MAAZ,EAAoBC,SAApB,EAAgC;AAAA;;AAAA,8JACxBD,MADwB,EAChBC,SADgB;;AAG9B,gBAAKC,KAAL,GAAaF,MAAb;AACA,gBAAKG,MAAL,CAAYC,MAAZ,GAAqB,MAAKD,MAAL,CAAYC,MAAZ,IAAsB,eAA3C;AACA,gBAAKD,MAAL,CAAYE,MAAZ,GAAqB,MAAKF,MAAL,CAAYE,MAAZ,IAAsB,eAA3C;AACA,gBAAKF,MAAL,CAAYG,MAAZ,GAAqB,MAAKH,MAAL,CAAYG,MAAZ,IAAsB,eAA3C;AACA,gBAAKH,MAAL,CAAYI,IAAZ,GAAmB,MAAKJ,MAAL,CAAYI,IAAZ,IAAoB,WAAvC;AACA;;AAR8B;AAU/B;;AAED;;;;;;2CAIiBC,K,EAAO;AACtB;AACA;AACA,mBAAO,KAAKC,UAAL,CAAgBC,sBAAhB,CAAuCF,KAAvC,CAAP;AACD;;;2CAEgBA,K,EAAO;AACtB;AACA,mBAAO,KAAKC,UAAL,CAAgBE,sBAAhB,CAAuC,KAAKR,MAAL,CAAYC,MAAnD,CAAP;AACD;;;2CAEgBI,K,EAAO;AACtB,mBAAO,KAAKC,UAAL,CAAgBG,sBAAhB,CAAuC,KAAKT,MAAL,CAAYC,MAAnD,EAA2D,KAAKD,MAAL,CAAYE,MAAvE,CAAP;AACD;;;6CAEkB;AACjB,iBAAKF,MAAL,CAAYU,QAAZ,GAAuB,CAAC,KAAKV,MAAL,CAAYU,QAApC;AACD;;;oDAEyB;AACxB,iBAAKV,MAAL,CAAYE,MAAZ,GAAqB,eAArB;AACA,iBAAKF,MAAL,CAAYG,MAAZ,GAAqB,eAArB;AACA,iBAAKQ,SAAL,CAAeC,OAAf,GAHwB,CAGE;AAC3B;;;oDAEyB;AACxB,iBAAKZ,MAAL,CAAYG,MAAZ,GAAqB,eAArB;AACA,iBAAKQ,SAAL,CAAeC,OAAf,GAFwB,CAEE;AAC3B;;;oDAEyB;AACxB,iBAAKD,SAAL,CAAeC,OAAf,GADwB,CACE;AAC3B;;;;QAlD6CjB,S;;;;AAqDhDC,iCAA2BiB,WAA3B,GAAyC,4BAAzC","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\r\nimport './css/query-editor.css!'\r\n\r\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\r\n\r\n  constructor($scope, $injector)  {\r\n    super($scope, $injector);\r\n\r\n    this.scope = $scope;\r\n    this.target.device = this.target.device || 'select device';\r\n    this.target.plugin = this.target.plugin || 'select plugin';\r\n    this.target.sensor = this.target.sensor || 'select sensor';\r\n    this.target.type = this.target.type || 'timeserie';\r\n    //this.target.mode = this.target.mode || 'Continuous';\r\n\r\n  }\r\n\r\n  /*getOptions(query) {\r\n    return this.datasource.metricFindQuery(query || '');\r\n  }*/\r\n\r\n  getDeviceOptions(query) {\r\n    //this.target.plugin = 'select plugin';\r\n    //this.target.sensor = 'select sensor';\r\n    return this.datasource.metricFindQuery_device(query);\r\n  }\r\n\r\n  getPluginOptions(query) {\r\n    //this.target.sensor = 'select sensor';\r\n    return this.datasource.metricFindQuery_plugin(this.target.device);\r\n  }\r\n\r\n  getSensorOptions(query) {\r\n    return this.datasource.metricFindQuery_sensor(this.target.device, this.target.plugin);\r\n  }\r\n\r\n  toggleEditorMode() {\r\n    this.target.rawQuery = !this.target.rawQuery;\r\n  }\r\n\r\n  onChangeInternal_device() {\r\n    this.target.plugin = 'select plugin';\r\n    this.target.sensor = 'select sensor';\r\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\r\n  }\r\n\r\n  onChangeInternal_plugin() {\r\n    this.target.sensor = 'select sensor';\r\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\r\n  }\r\n\r\n  onChangeInternal_sensor() {\r\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\r\n  }\r\n}\r\n\r\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\r\n\r\n"]}